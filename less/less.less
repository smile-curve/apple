@import "var.less";
/*
如果在less里面出现了 类名的符号
1.正常的类名
2.方法
1.函数  @sj;
2.分支结构
3.循环结构
*/
.radius(@r1:50%,@r2:50%,@r3:50%,@r4:50%){
  -webkit-border-radius: @arguments;    //火狐
  -o-border-radius: @arguments;    //
  -moz-border-radius: @arguments;    //谷歌
  -ms-border-radius: @arguments;    //
  border-radius: @arguments;
}
.shadow(@type,@x:0,@y:0,@a:0,@b:#000) when (@type=0) {
  -webkit-box-shadow:@x @y @a @b;
  -o-box-shadow:@x @y @a @b;
  -moz-box-shadow:@x @y @a @b;
  -ms-box-shadow:@x @y @a @b;
  box-shadow:@x @y @a @b;
}
.shadow(@type,@x:0,@y:0,@a:0,@b:#000) when (@type=1) {
  -webkit-box-shadow:@x @y @a @b inset;
  -o-box-shadow:@x @y @a @b inset;
  -moz-box-shadow:@x @y @a @b inset;
  -ms-box-shadow:@x @y @a @b inset;
  box-shadow:@x @y @a @b inset;
}
/*div{
  width:@width;
  height:@height;
  margin:@margin;
  border:1px solid @color;
  .radius(20%,20%);
  .shadow(0);
}*/

div{   //div中嵌套的标签
  &{
    width:200px;
    height:200px;
  }
  & span{
    width:200px;
    height:200px;
    & a{
      width:100px;
    }
  }
}

.clear(){
  &:before,&:after{
    content:"";
    display: block;
  }
  &:after{
    clear:both;
  }
}
div{
  .clear;
}


.loop (@i:1) when (@i<10){    //循环结构
  .col-s-@{i}{     //连接变量@i时要写成@{i}
    width:200px;
  }
  .loop(@i+1);
}

span{
  .radius;
}
ul{
  .radius;
}
.one{
  width:200px;
  height:200px;
  border:2px solid red;
  border-image-source:url("../border.jpg");   //图片的路径
  border-image-width:50px;    //图片边框的宽度
  border-image-slice:33.3333333%;     //裁切  图片内框向内偏移 (只能写百分比)
  border-image-repeat:round;    //图片边框是否平铺(repeat),铺满(round)或拉伸(stretch)(默认)
  border-image-outset:10px;   //边框图像区域超出边框的值
}
.loop;
